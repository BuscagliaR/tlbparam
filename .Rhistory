library(readxl)
Clinical_and_demographic_data_11_03_2022corrected <- read_excel("temp/Clinical and demographic data 11.03.2022corrected.xlsx")
View(Clinical_and_demographic_data_11_03_2022corrected)
# import patient data
melPatientData <- read_excel(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx")
library(readxl)
library(tidyverse)
# import patient data
melPatientData <- read_excel(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx")
View(melPatientData)
library(tlb.param)
?load_patientdata()
functionImport <- load_patientdata("temp/Clinical and demographic data 11.03.2022corrected.xlsx")
functionImport <- load_patientdata(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx",
sheet = "WC&C after NG&GS Melissa")
functionImport <- load_patientdata(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx",
sheet = "WC&C after NG&GS Melissa")
functionImport <- load_patientdata(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx")
functionImport <- load_patientdata(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx",
sheet = "Sheet 1")
View(functionImport)
identical(functionImport, melPatientData)
View(functionImport)
setdiff(functionImport, melPatientData)
is.data.frame(melPatientData)
this <- inner_join(functionImport, melPatientData)
identical(this, functionImport)
identical(this, melPatientData)
identical(colnames(melPatientData), colnames(functionImport))
typeof(functionImport)
typeof(melPatientData)
this <- setdiff(melPatientData, functionImport)
View(this)
equals(functionImport, melPatientData)
comparedf(functionImport, melPatientData)
install.packages("arsenal")
arsenal::comparedf(functionImport, melPatientData)
# import patient data using tlbparam package
patientData <- load_patientdata(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx",
sheet = "Sheet 1")
melTherms <- load_thermograms("temp/Melanoma thermograms All RB.xlsx")
View(melTherms)
View(patientData)
allData <- inner_join(patientData, melTherms, by c("SampleCode", "Sample ID"))
allData <- inner_join(patientData, melTherms, by=c("SampleCode", "Sample ID"))
allData <- inner_join(patientData, melTherms, by=(SampleCode, Sample ID))
allData <- inner_join(patientData, melTherms, by=c(SampleCode, Sample ID))
?inner_join
allData <- inner_join(patientData, melTherms, by=c("SampleCode" = "Sample ID"))
# import patient data using tlbparam package
patientData <- load_patientdata(
"temp/Clinical and demographic data 11.03.2022corrected.xlsx",
sheet = "Sheet 1")
# import thermograms using tlbparam package
melTherms <- load_thermograms("temp/Melanoma thermograms All RB.xlsx")
View(melTherms)
View(patientData)
patientData$`Sample ID`
allData <- inner_join(
patientData,
melTherms,
by= c("SampleCode" = "Sample ID")
)
last_error()
rlang::last_error()
rlang::last_trace()
allData <- inner_join(
patientData,
melTherms,
by= c("SampleCode" = "`Sample ID`")
)
allData <- inner_join(
patientData,
melTherms,
by= c("SampleCode", "Sample ID")
)
allData <- inner_join(
patientData,
melTherms,
by= c("Sample ID", "SampleCode")
)
allData <- inner_join(
patientData,
melTherms,
by= c("Sample ID", "SampleCode")
)
allData <- inner_join(
patientData,
melTherms,
by = c("Sample ID" = "SampleCode")
)
typeof(patientData$`Sample ID`)
patientData$`Sample ID` = as.numeric(patientData$`Sample ID`)
allData <- inner_join(
patientData,
melTherms,
by = c("Sample ID" = "SampleCode")
)
patientData$`Sample ID` = numeric(patientData$`Sample ID`)
patientData$`Sample ID` = as.numeric(patientData$`Sample ID`)
typeof(patientData$`Sample ID`)
typeof(patientData$SampleCode)
typeof(melTherms$SampleCode)
melTherms$SampleCode = as.numeric(melTherms$SampleCode)
allData <- inner_join(
patientData,
melTherms,
by = c("Sample ID" = "SampleCode")
)
View(allData)
thermSummaryAll <- clean_thermograms(melTherms)
View(melTherms)
View(thermSummaryAll)
patientTest <- clean_thermograms(melTherms, patient = c(4501, 5402))
library(tlbparam)
library(tlbparam)
?clean_thermograms
clean_thermograms
library(tidyverse)
load('r-image/Clin_and_Thermo_11172022.RData')
### Exatracting Clinical Information for combined use with Thermograms
AllStatus <- ClinDemo %>%
select(`Sample ID`, `PatientStudyID`, `Group`, `StatusSimplified`,
`TreatmentSimplified`, `Baseline`, `Collected(daysPostdx)`,
`Age`, `Sex`, `Ethnicity`, `PFS`, `PFS_S`, `OS`, `OS_S`) %>%
mutate(`Sample ID` = as.character(`Sample ID`)) %>%
rename(`Time.days` = `Collected(daysPostdx)`)
### Combine Thermorgrams and Clinical Information
MelaThermo.Clin.long <- left_join(MelaThermo.long, AllStatus,
by=c('SampleID' = 'Sample ID'))
###########################
### GENSUM Metrics and PCA
###########################
### Apply GenSum to thermograms
#library(GenSumv20)
####  Need to reshape thermogram dataframe for GenSum
#### Can use this to filter samples if we want to reduce for PCA
#### Could also filter anything else that comes up down the road
#### All thermogram summaries use 45 - 90 C
MelaThermo.GenSum_form <- MelaThermo.long %>%
mutate(Temperature = paste0('T', Temperature)) %>%
pivot_wider(names_from = Temperature, values_from = dCp) %>%
rename(SampleCode = SampleID)
Summary_Metrics_GenSum <- GenSumv20::clean_thermograms(MelaThermo.GenSum_form)
Summary_Metrics_tlbparam <- tlbparam::clean_thermograms(MelaThermo.GenSum_form)
if(identical(Summary_Metrics_GenSum, Summary_Metrics_tlbparam)){
print("Packages produce the same output")
}else{
print("Sucks.")
}
load('Clin_and_Thermo_11172022.RData')
load('temp/Clin_and_Thermo_11172022.RData')
library(tidyverse)
load('temp/Clin_and_Thermo_11172022.RData')
### Exatracting Clinical Information for combined use with Thermograms
AllStatus <- ClinDemo %>%
select(`Sample ID`, `PatientStudyID`, `Group`, `StatusSimplified`,
`TreatmentSimplified`, `Baseline`, `Collected(daysPostdx)`,
`Age`, `Sex`, `Ethnicity`, `PFS`, `PFS_S`, `OS`, `OS_S`) %>%
mutate(`Sample ID` = as.character(`Sample ID`)) %>%
rename(`Time.days` = `Collected(daysPostdx)`)
### Combine Thermorgrams and Clinical Information
MelaThermo.Clin.long <- left_join(MelaThermo.long, AllStatus,
by=c('SampleID' = 'Sample ID'))
###########################
### GENSUM Metrics and PCA
###########################
### Apply GenSum to thermograms
#library(GenSumv20)
####  Need to reshape thermogram dataframe for GenSum
#### Can use this to filter samples if we want to reduce for PCA
#### Could also filter anything else that comes up down the road
#### All thermogram summaries use 45 - 90 C
MelaThermo.GenSum_form <- MelaThermo.long %>%
mutate(Temperature = paste0('T', Temperature)) %>%
pivot_wider(names_from = Temperature, values_from = dCp) %>%
rename(SampleCode = SampleID)
Summary_Metrics_GenSum <- GenSumv20::clean_thermograms(MelaThermo.GenSum_form)
Summary_Metrics_tlbparam <- tlbparam::clean_thermograms(MelaThermo.GenSum_form)
if(identical(Summary_Metrics_GenSum, Summary_Metrics_tlbparam)){
print("Packages produce the same output")
}else{
print("Sucks.")
}
library(tidyverse)
load('temp/Clin_and_Thermo_11172022.RData')
### Exatracting Clinical Information for combined use with Thermograms
AllStatus <- ClinDemo %>%
select(`Sample ID`, `PatientStudyID`, `Group`, `StatusSimplified`,
`TreatmentSimplified`, `Baseline`, `Collected(daysPostdx)`,
`Age`, `Sex`, `Ethnicity`, `PFS`, `PFS_S`, `OS`, `OS_S`) %>%
mutate(`Sample ID` = as.character(`Sample ID`)) %>%
rename(`Time.days` = `Collected(daysPostdx)`)
### Combine Thermorgrams and Clinical Information
MelaThermo.Clin.long <- left_join(MelaThermo.long, AllStatus,
by=c('SampleID' = 'Sample ID'))
###########################
### GENSUM Metrics and PCA
###########################
### Apply GenSum to thermograms
#library(GenSumv20)
####  Need to reshape thermogram dataframe for GenSum
#### Can use this to filter samples if we want to reduce for PCA
#### Could also filter anything else that comes up down the road
#### All thermogram summaries use 45 - 90 C
MelaThermo.GenSum_form <- MelaThermo.long %>%
mutate(Temperature = paste0('T', Temperature)) %>%
pivot_wider(names_from = Temperature, values_from = dCp) %>%
rename(SampleCode = SampleID)
Summary_Metrics_GenSum <- GenSumv20::clean_thermograms(MelaThermo.GenSum_form)
Summary_Metrics_tlbparam <- tlbparam::clean_thermograms(MelaThermo.GenSum_form)
if(identical(Summary_Metrics_GenSum, Summary_Metrics_tlbparam)){
print("Packages produce the same output")
}else{
print("Sucks.")
}
Summary_Metrics_GenSum <- GenSumv20::clean_thermograms(MelaThermo.GenSum_form, lag = TRUE)
Summary_Metrics_tlbparam <- tlbparam::clean_thermograms(MelaThermo.GenSum_form,
lag = TRUE)
if(identical(Summary_Metrics_GenSum, Summary_Metrics_tlbparam)){
print("Packages produce the same output")
}else{
print("Sucks.")
}
View(Summary_Metrics_tlbparam)
library(tlbparam)
library(tidyverse)
load('temp/Clin_and_Thermo_11172022.RData')
### Exatracting Clinical Information for combined use with Thermograms
AllStatus <- ClinDemo %>%
select(`Sample ID`, `PatientStudyID`, `Group`, `StatusSimplified`,
`TreatmentSimplified`, `Baseline`, `Collected(daysPostdx)`,
`Age`, `Sex`, `Ethnicity`, `PFS`, `PFS_S`, `OS`, `OS_S`) %>%
mutate(`Sample ID` = as.character(`Sample ID`)) %>%
rename(`Time.days` = `Collected(daysPostdx)`)
### Combine Thermorgrams and Clinical Information
MelaThermo.Clin.long <- left_join(MelaThermo.long, AllStatus,
by=c('SampleID' = 'Sample ID'))
###########################
### GENSUM Metrics and PCA
###########################
### Apply GenSum to thermograms
#library(GenSumv20)
####  Need to reshape thermogram dataframe for GenSum
#### Can use this to filter samples if we want to reduce for PCA
#### Could also filter anything else that comes up down the road
#### All thermogram summaries use 45 - 90 C
MelaThermo.GenSum_form <- MelaThermo.long %>%
mutate(Temperature = paste0('T', Temperature)) %>%
pivot_wider(names_from = Temperature, values_from = dCp) %>%
rename(SampleCode = SampleID)
Summary_Metrics_GenSum <- GenSumv20::clean_thermograms(MelaThermo.GenSum_form, lag = TRUE)
Summary_Metrics_tlbparam <- tlbparam::clean_thermograms(MelaThermo.GenSum_form,
lag = TRUE)
if(identical(Summary_Metrics_GenSum, Summary_Metrics_tlbparam)){
print("Packages produce the same output")
}else{
print("Sucks.")
}
